[{"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\App.js":"1","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Map.js":"2","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\About.js":"3","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\reportWebVitals.js":"4","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Pcomponent.js":"5","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Card.js":"6","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Event.js":"7"},{"size":691,"mtime":1607732221482,"results":"8","hashOfConfig":"9"},{"size":3248,"mtime":1607720518806,"results":"10","hashOfConfig":"9"},{"size":1352,"mtime":1607731941693,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1607716962749,"results":"12","hashOfConfig":"9"},{"size":1596,"mtime":1607729445203,"results":"13","hashOfConfig":"9"},{"size":214,"mtime":1607731561577,"results":"14","hashOfConfig":"9"},{"size":1439,"mtime":1607731001505,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yfm0tv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\App.js",["32","33","34","35"],"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Map.js",["36","37"],"import React from 'react'\r\nimport {GoogleMap, InfoWindow, LoadScript, Marker} from '@react-google-maps/api';\r\nimport {formatRelative} from 'date-fns';\r\nimport usePlacesAutocomplete, {getGeocode,} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption, ComboboxPopover} from \"@reach/combobox\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst containerStyle = {\r\n    width: '100vw',\r\n    height: '100vh'\r\n  };\r\n   \r\n  const center = {\r\n    lat: 49.839684,\r\n    lng: 24.029716\r\n  };\r\n   const options = {\r\n    disableDefaultUI: true,\r\n    zoomControl: true,\r\n   }\r\n  \r\n   function Search() {\r\n    const {\r\n      ready,\r\n      value,\r\n      suggestions: {status, data},\r\n      setValue, \r\n      clearSuggestions\r\n    } = usePlacesAutocomplete({\r\n      requestOptions: {\r\n        location: {\r\n          lat: () => 49.839684,\r\n          lng: () => 24.029716 },\r\n          radius: 200 * 1000,\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"search\">\r\n      <Combobox \r\n      onSelect={async (address) => {\r\n      try {\r\n        const results = await getGeocode({address});\r\n        console.log(results[0])\r\n      } catch(error) {\r\n        console.log(\"error!\")\r\n      }\r\n    }}\r\n    >\r\n  \r\n    <ComboboxInput value={value} onChange={(e) => {\r\n      setValue(e.target.value);\r\n    }}\r\n    \r\n    placeholder=\"Enter an address\" />\r\n    <ComboboxPopover>\r\n      {status === \"OK\" && data.map(({id, description}) =>(\r\n        <ComboboxOption key={id} value={description} />\r\n      ))}\r\n    </ComboboxPopover>\r\n    </Combobox>\r\n    </div>\r\n    );\r\n  }\r\nfunction Map() {\r\n  \r\n    const [markers, setMarkers] = React.useState([]);\r\n    const [selected, setSelected] = React.useState(null);\r\n    const onMapClick = React.useCallback((event) => {\r\n      setMarkers((current) => [\r\n        ...current,\r\n        {\r\n          lat:event.latLng.lat(),\r\n          lng:event.latLng.lng(),\r\n          time: new Date()\r\n      },\r\n    ]);\r\n    }, []);\r\n   \r\n  \r\n    const mapRef = React.useRef();\r\n    const onMapLoad = React.useCallback((map) => {\r\n      mapRef.current = map;\r\n    }, []);\r\n    return ( <div>\r\n      \r\n      <LoadScript googleMapsApiKey=\"AIzaSyAFwUpEqV2eCsWKrp5Woq0YCg_3auodBOU\">\r\n          <h1>Google Maps API</h1>\r\n  \r\n  \r\n  \r\n      <Search />\r\n  \r\n  \r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={12}\r\n          options={options}\r\n          onClick={onMapClick}\r\n          onLoad={onMapLoad}\r\n  \r\n          \r\n          >\r\n          {markers.map((marker) => (\r\n          <Marker key={marker.time.toISOString()}\r\n          position={{lat:marker.lat, lng: marker.lng}}\r\n          onClick={() => {\r\n            setSelected(marker);\r\n          }}\r\n          />\r\n          ))}\r\n          {selected ? (<InfoWindow position={{lat: selected.lat, lng: selected.lng}}\r\n          onCloseClick={() => {\r\n            setSelected(null);\r\n          }}>\r\n              <div>\r\n                  <h2><Link to= \"/event\">Event</Link></h2>\r\n                  <p> Spotted {formatRelative(selected.time, new Date())}</p>\r\n              </div>\r\n          </InfoWindow>) : null}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n      </div>)\r\n  \r\n  }\r\n  export default React.memo(Map)\r\n","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\About.js",["38","39","40","41","42"],"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\reportWebVitals.js",[],"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Pcomponent.js",["43","44","45","46","47"],"import React from 'react'\r\nimport { TabContainer, Tab, Nav, Row, Col } from 'react-bootstrap';\r\n\r\nexport default function Pcomponent(props) {\r\n\r\n    const user = {\r\n        FirstName: 'Vasya',\r\n        SecondName: 'Pupkin',\r\n        Phone: '+380-666-666-666',\r\n        Address: 'Jmerunka, Poroshenka Street №3',\r\n        Email: 'vasyapupkin@gmail.com',\r\n        Site: 'www.xvideos.com',\r\n        Birthday: 'April 36, 1998',\r\n        Gender: 'Dinosaur',\r\n        Age: 54\r\n    }\r\n\r\n    return (\r\n        <div className = 'userInfo col-md-3 border text-left'>\r\n            <ul className = 'greyText '>\r\n                <p className='text-left text-uppercase'>contact information</p>\r\n\r\n                    <li className = 'userText text-left'>Phone: {user.Phone} </li>\r\n                    <li className = 'userText'>Address: {user.Address} </li>\r\n                    <li className = 'userText'>Email: {user.Email} </li>\r\n                    <li className = 'userText'>Site: {user.Site} </li>\r\n                \r\n            </ul>\r\n\r\n            <ul className = 'greyText2'>\r\n                <p className='text-left text-uppercase'>basic information</p>\r\n                    <li className = 'userText'>First name: {user.FirstName} </li>\r\n                    <li className = 'userText'>Second name: {user.SecondName} </li>\r\n                    <li className = 'userText'>Birthday: {user.Birthday} </li>\r\n                    <li className = 'userText'>Age: {user.Age} </li>\r\n                    <li className = 'userText'>Gender: {user.Gender} </li>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Card.js",[],"C:\\Users\\Taras\\Desktop\\react-study-app\\react-study-app\\src\\сomponents\\Event.js",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":3,"column":34,"nodeType":"50","messageId":"51","endLine":3,"endColumn":40},{"ruleId":"48","severity":1,"message":"53","line":3,"column":42,"nodeType":"50","messageId":"51","endLine":3,"endColumn":47},{"ruleId":"48","severity":1,"message":"54","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},{"ruleId":"48","severity":1,"message":"55","line":25,"column":7,"nodeType":"50","messageId":"51","endLine":25,"endColumn":12},{"ruleId":"48","severity":1,"message":"56","line":29,"column":7,"nodeType":"50","messageId":"51","endLine":29,"endColumn":23},{"ruleId":"48","severity":1,"message":"57","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":22},{"ruleId":"48","severity":1,"message":"58","line":2,"column":29,"nodeType":"50","messageId":"51","endLine":2,"endColumn":32},{"ruleId":"48","severity":1,"message":"59","line":2,"column":34,"nodeType":"50","messageId":"51","endLine":2,"endColumn":37},{"ruleId":"48","severity":1,"message":"60","line":2,"column":39,"nodeType":"50","messageId":"51","endLine":2,"endColumn":42},{"ruleId":"48","severity":1,"message":"61","line":2,"column":44,"nodeType":"50","messageId":"51","endLine":2,"endColumn":53},{"ruleId":"48","severity":1,"message":"57","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":22},{"ruleId":"48","severity":1,"message":"62","line":2,"column":24,"nodeType":"50","messageId":"51","endLine":2,"endColumn":27},{"ruleId":"48","severity":1,"message":"58","line":2,"column":29,"nodeType":"50","messageId":"51","endLine":2,"endColumn":32},{"ruleId":"48","severity":1,"message":"59","line":2,"column":34,"nodeType":"50","messageId":"51","endLine":2,"endColumn":37},{"ruleId":"48","severity":1,"message":"60","line":2,"column":39,"nodeType":"50","messageId":"51","endLine":2,"endColumn":42},"no-unused-vars","'Event' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Map' is defined but never used.","'ready' is assigned a value but never used.","'clearSuggestions' is assigned a value but never used.","'TabContainer' is defined but never used.","'Nav' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Tab' is defined but never used."]